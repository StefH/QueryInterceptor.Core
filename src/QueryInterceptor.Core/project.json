{
    "version": "1.0.6.0",
    "title": "QueryInterceptor.Core",
    "description": "Exposes a generic extension method to IQueryable<T> that allows interception of expression trees with expression visitors.",
    "authors": [ "David Fowler", "Stef Heyenrath" ],

    "packOptions": {
        "summary": "Exposes a generic extension method to IQueryable<T> and IDbAsyncQueryProvider<T> that allows interception of expression trees with expression visitors.",
        "tags": [ "linq", "provider", "query", "intercept", "expression", "expressionvisitor", "visitor" ],
        "owners": [ "Stef Heyenrath" ],
        "projectUrl": "https://github.com/StefH/QueryInterceptor.Core",
        "licenseUrl": "https://raw.githubusercontent.com/StefH/QueryInterceptor.Core/master/LICENSE",
        "releaseNotes": "Support async IQueryable"
    },

    "buildOptions": {
    },

    "dependencies": {
        "JetBrains.Annotations": {
            "version": "10.4.0",
            "type": "build"
        }
    },

    "frameworks": {
        "net40": {
        },
        "net45": {
        },
        "netstandard1.3": {
            "buildOptions": { "define": [ "NETSTANDARD" ] },
            "imports": [
            ],
            "dependencies": {
                "Microsoft.CSharp": "4.3.0",
                "System.Diagnostics.Debug": "4.3.0",
                "System.Diagnostics.TraceSource": "4.3.0",
                "System.Globalization": "4.3.0",
                "System.Linq": "4.3.0",
                "System.Reflection.TypeExtensions": "4.3.0"
            }
        }
    }
}